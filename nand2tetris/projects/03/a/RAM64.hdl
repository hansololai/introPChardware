// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    // Put your code here:
    // Put your code here:
    // Use DMux to select which register load=1
    //DMux16(in=load,sel=address[3..5],a=l0,b=l1,c=l2,d=l3,e=l4,f=l5,g=l6,h=l7);

    Not(in=address[3],out=n0);
    Not(in=address[4],out=n1);
    Not(in=address[5],out=n2);
    // first two register control
    And(a=n1,b=n2,out=n1n2);
    And(a=n1n2,b=n0,out=c0);
    And(a=n1n2,b=address[3],out=c1);
    // next two, 010,011;
    And(a=n2,b=address[4],out=n21);
    And(a=n21,b=n0,out=c2);
    And(a=n21,b=address[3],out=c3);
    // next two, 100, 101;
    And(a=address[5],b=n1,out=n12);
    And(a=n12,b=n0,out=c4);
    And(a=n12,b=address[3],out=c5);
    // final two, 110,111;
    And(a=address[5],b=address[4],out=p12);
    And(a=p12,b=n0,out=c6);
    And(a=p12,b=address[3],out=c7);
    // Now control the load input of each RAM8
    And(a=load,b=c0,out=l0); 
    And(a=load,b=c1,out=l1);
    And(a=load,b=c2,out=l2);
    And(a=load,b=c3,out=l3);
    And(a=load,b=c4,out=l4);
    And(a=load,b=c5,out=l5);
    And(a=load,b=c6,out=l6);
    And(a=load,b=c7,out=l7);

    // Now connect RAM8
    RAM8(in=in,load=l0,address=address[0..2],out=o0);
    RAM8(in=in,load=l1,address=address[0..2],out=o1);
    RAM8(in=in,load=l2,address=address[0..2],out=o2);
    RAM8(in=in,load=l3,address=address[0..2],out=o3);
    RAM8(in=in,load=l4,address=address[0..2],out=o4);
    RAM8(in=in,load=l5,address=address[0..2],out=o5);
    RAM8(in=in,load=l6,address=address[0..2],out=o6);
    RAM8(in=in,load=l7,address=address[0..2],out=o7);
    // Now control the output, only display the selected output

    // Now use Mux8Way16 to select output
    Mux8Way16(a=o0,b=o1,c=o2,d=o3,e=o4,f=o5,g=o6,h=o7,sel=address[3..5],out=out);
}