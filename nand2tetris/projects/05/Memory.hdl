// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Put your code here:
    And(a=address[14],b=address[13],out=two);
    And(a=two,b=address[12],out=invalid);     // if it's 111, then it's over 0x6000.
    Not(in=invalid,out=valid);
    And(a=valid,b=load,out=load2);  // Makes it impossible to write to 0x6000+
    Not(in=address[14],out=firstblock);
    Not(in=address[13],out=temp);
    And(a=address[14],b=temp,out=secondblock);

    And(a=firstblock,b=load2,out=l1);
    And(a=secondblock,b=load2,out=l2);
    RAM16K(in=in,load=l1,address=address[0..13],out=o1);
    Screen(in=in,load=l2,address=address[0..12],out=o2);
    // check for keyboard
    Keyboard(out=keyout);
    Mux16(a=o1,b=o2,sel=address[14],out=o1o2);
    //if both firstblock,secondblock are 0, output keyboard
    Or(a=firstblock,b=secondblock,out=fors);
    Mux16(a=keyout,b=o1o2,sel=fors,out=out);


}